@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Inputs
@using System.Collections.ObjectModel
@using Syncfusion.Blazor.Lists

@namespace InternshipApp.Portal.Views

<Stack ClassName="chat-view" Style="width: 100%;">
    <Stack />
    <Stack ClassName="sticky top" Style="width:calc(100% - 250px);" Horizontal VerticalAlign="Wave5.UI.Alignment.Center">
        <span class="e-avatar e-avatar-circle receiver image"></span>
        <b style="margin-left:8px">
            @(Receiver?.FullName)
        </b>
    </Stack>
    <div id="chat">
        <SfListView ID="list"
                    DataSource="@ChatMessages"
                    ShowHeader="false"
                    HeaderTitle="">
            <ListViewTemplates TValue="ChatModel">
                <Template>
                    @{
                        var currentData = context as ChatModel;

                        if (currentData.Name == "break")
                        {
                            <Stack Horizontal=false HorizontalAlign="Wave5.UI.Alignment.Center">
                                
                                <div class="small__font gray">@currentData.CreatedAt.ToString("dd/MM/yyyy HH:mm:ss")</div>
                            </Stack>
                        }
                        else
                        {
                            <div class="flex item__container">
                                <div class="flex flex__1 vertical__center flex__center @(currentData.IsSender ? "flex__order__2" : "")">
                                    <span class="e-avatar e-avatar-circle @(currentData.IsSender ? "sender" : "receiver") image"></span>
                                </div>
                                <div class="flex content__container flex__8 vertical padding @(currentData.IsSender ? "right__align" : "left__align")">
                                    <div class="bold">@currentData.Name</div>
                                    <div class="small__font black">@currentData.ChatMessage</div>
                                    <div class="small__font gray">@currentData.CreatedAt.ToString("dd/MM/yyyy HH:mm:ss")</div>
                                </div>
                            </div>
                        }

                    }
                </Template>
            </ListViewTemplates>
        </SfListView>
        <div id="end-chat"></div>
        <Stack Style="width:calc(100% - 650px);" Horizontal ClassName="sticky bottom">
            <div class="flex__8 padding">
                <SfTextBox Placeholder="Type your message" @bind-Value="@ChatContent"/>
            </div>
            <div class="flex__1 padding">
                <SfButton Content="Send" OnClick="OnSend" CssClass="send-btn" />
            </div>
        </Stack>
    </div>
</Stack>

<style>
    .chat-view{
        padding-top: 40px;
    }

    #list {
        box-shadow: 0 1px 4px #ddd;
        border-bottom: 1px solid #ddd;
    }

    .send-btn {
        width: 100%;
    }

    #chat {
        margin-top: 50px;
        margin-bottom: 50px;
        display: block;
    }

    #list {
        margin: 0 auto;
        border: 1px solid #ccc;
    }

        #list .e-list-item {
            height: auto;
            cursor: pointer;
            line-height: 22px;
            padding: 8px;
        }

        #list.e-listview .e-list-header {
            background-color: #0278d7;
            color: white;
        }

        #list .e-list-item.e-active {
            background-color: transparent;
        }

    .padding {
        padding: 4px;
    }

    .right__align {
        text-align: right;
        margin-right: 8px;
        padding-right: 8px;
    }

    .left__align {
        margin-left: 8px;
        padding-left: 8px;
    }

    .content__container {
        background-color: aliceblue;
    }

    .flex {
        display: flex;
    }

    .flex__center {
        justify-content: center;
    }

    .vertical__center {
        align-items: center;
    }

    .vertical {
        flex-direction: column;
    }

    .flex__order__1 {
        order: 1;
    }

    .flex__order__2 {
        order: 2;
    }

    .flex__1 {
        flex: 1;
    }

    .flex__2 {
        flex: 2;
    }

    .flex__3 {
        flex: 3;
    }

    .flex__5 {
        flex: 5;
    }

    .flex__8 {
        flex: 8;
    }

    .bold {
        color: black !important;
        font-weight: 500;
    }

    .margin {
        margin: 10px;
        width: 350px;
    }

    .small__font {
        font-size: 13px;
        margin: 2px 0;
    }

    .e-avatar.image.sender {
        background-image: url("@(string.IsNullOrEmpty(SenderAvatar) ? "https://i.imgur.com/WxNkK7J_d.webp" : SenderAvatar)");
        background-size: contain;
    }

    .e-avatar.image.receiver {
        background-image: url("@(string.IsNullOrEmpty(ReceiverAvatar) ? "https://i.imgur.com/WxNkK7J_d.webp" : ReceiverAvatar)");
        background-size: contain;
    }

    .sticky.bottom {
        position: fixed;
        bottom: 0px;
        left: 250px;
        z-index: 999;
    }

    .sticky.top {
        padding: 8px 8px 8px 38px;
        position: fixed;
        top: 0px;
        left: 250px;
        background-color: white;
        z-index: 50;
        box-shadow: 0px 0px 10px 0px;
    }

    .gray {
        color: darkgray !important;
    }

    .black {
        color: black;
    }

    hr {
        width: 100%;
    }

</style>